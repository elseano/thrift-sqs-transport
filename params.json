{"tagline":"A transport for Thrift using Amazon's Simple Queue Service.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Thrift-sqs-transport","body":"= thrift-sqs-transport\r\n\r\nA transport for Thrift using Amazon's Simple Queue Service. Its best to use this with a text-based protocol, as SQS rejects data streams from the binary protocols.\r\n\r\nThe Thrift 0.8 gem doesn't contain the JsonProtocol. To use that, see my other gem: thrift-json.\r\n\r\n= Example\r\n\r\n    struct Message {\r\n      1: string subject;\r\n      2: string body;\r\n    }\r\n\r\n    service LoggerService {\r\n      oneway void send_message(1: Message message);\r\n    }\r\n\r\n== Server Example\r\n\r\n    # The handler class to respond to service calls.\r\n    class LoggerHandler\r\n      def send_message(message)\r\n        puts \"I have a message. Here it is: #{message.inspect}\"\r\n      end\r\n    end\r\n\r\n    # Setup the server transport. See the source for the options available.\r\n    transport = Thrift::SqsServerTransport.new(\"my-queue\", aws_key, aws_secret, :delete => true)\r\n    handler = LoggerHandler.new\r\n    processor = LoggerService::Processor.new(handler)\r\n    server = Thrift::SimpleServer.new(processor, transport, Thrift::BaseTransportFactory.new, Thrift::JsonProtocolFactory.new)\r\n\r\n    server.serve\r\n\r\n== Client Example\r\n\r\n    transport = Thrift::SqsTransport.new(\"my-queue\", aws_key, aws_secret)\r\n    protocol = Thrift::JsonProtocol.new(transport)\r\n\r\n    message = Message.new(subject: \"Hello\", body: \"World!\")\r\n\r\n    logger = LoggerService::Client.new(protocol)\r\n    logger.send_message(message)\r\n"}